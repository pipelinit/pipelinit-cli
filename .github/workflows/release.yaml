name: Release new version

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  VERSION: test_release

on: [ push ]

jobs:
  release:
    name: Build and publish a new release
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v2
      - uses: denoland/setup-deno@v1
        with:
          deno-version: v1.14.0
      - name: Build Linux binary
        env:
          BUILD_TARGET: "x86_64-unknown-linux-gnu"
          RELEASE_VERSION: "${{ env.VERSION }}"
        run: |
          cd cli; deno run --unstable --allow-read --allow-write --allow-net --allow-env --allow-run build.ts
      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          build-args: "version=${{ env.VERSION }}"
          context: cli/
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Build Windows binary
        env:
          BUILD_TARGET: "x86_64-pc-windows-msvc"
          RELEASE_VERSION: "${{ env.VERSION }}"
        run: |
          cd cli
          deno run --unstable --allow-read --allow-write --allow-net --allow-env --allow-run build.ts
      - name: Build Mac x86_64 binary
        env:
          BUILD_TARGET: "x86_64-apple-darwin"
          RELEASE_VERSION: "${{ env.VERSION }}"
        run: |
          cd cli
          deno run --unstable --allow-read --allow-write --allow-net --allow-env --allow-run build.ts

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          name: 'Test release'
          prerelease: true
          tag_name: test_release
          files: |
            bin/pipelinit-${{ env.VERSION }}-86_64-unknown-linux-gnu.tar.gz
            bin/pipelinit-${{ env.VERSION }}-x86_64-pc-windows-msvc.zip
            bin/pipelinit-${{ env.VERSION }}-x86_64-apple-darwin.tar.gz
